buildscript {
    ext {
        kotlin_version = '1.5.+'
    }

    repositories {
        mavenCentral()

        // gradle plugin repository
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version
        classpath group: 'gradle.plugin.com.github.johnrengelman', name: 'shadow', version: '7.1.0'
    }
}

apply plugin: 'kotlin'
// build fat jars
apply plugin: 'com.github.johnrengelman.shadow'

// change build output to avoid name clashes with shell script 'build'
buildDir('out')

group = 'edu.kit.compiler'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.github.ajalt.clikt:clikt:3.3.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$project.kotlin_version"
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'

    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
}

// define JVM target version
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        jvmTarget = "16"
    }
}

java {
    targetCompatibility = JavaVersion.VERSION_16
}

jar {
    archivesBaseName = "compiler"

    manifest {
        attributes 'Implementation-Title': 'MiniJavaCompiler',
                'Implementation-Version': project.version,
                'Main-Class': 'edu.kit.compiler.MainKt'
    }
}

shadowJar {
    archiveName("compiler-all.jar")
}

test {
    useJUnitPlatform()
}


// ktlint (https://github.com/pinterest/ktlint)

configurations {
    ktlint
}

dependencies {
    ktlint("com.pinterest:ktlint:0.42.1") {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml", "src/**/*.kt"
}
check.dependsOn ktlint

// does not work with java 16 yet (https://github.com/pinterest/ktlint/issues/1195), switch to java 11 for running this task
task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

